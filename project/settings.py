"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from datetime import timedelta
import environ
import os

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)
base = environ.Path(__file__) - 1
env = environ.Env(DEBUG=(bool, False))
environ.Env.read_env(env_file=base('.env'))

# False if not in os.environ because of casting above
DEBUG = env('DEBUG')

from pathlib import Path
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

DATA_UPLOAD_MAX_NUMBER_FIELDS = 10240

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [i for i in env('ALLOWED_HOSTS').split(',')]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'import_export',
    'tinymce',
    'django_crontab',
    'django_filters',
    'account',
    'web',
    'core',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # hsts middleware
    'django.middleware.security.SecurityMiddleware',
    # 'sslify.middleware.SSLifyMiddleware',
    'csp.middleware.CSPMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.jinja2.Jinja2',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'environment': "project.jinja2.environment",
        },
    },
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['template'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

WSGI_APPLICATION = 'project.wsgi.application'
AUTH_USER_MODEL = 'account.User'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

try:
    DATABASES = {
        'default': env.db()
    }
except:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }



# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend'
    ],
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60*24),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=20),
    'ALGORITHM': 'HS256',
}

TINYMCE_SPELLCHECKER = True


LEAD_SQUARE_ACCESS_KEY = env("LEAD_SQUARE_ACCESS_KEY")
LEAD_SQUARE_SECRET_KEY = env("LEAD_SQUARE_SECRET_KEY")
SMS_USER_ID=env("SMS_USER_ID")
SMS_PASSWORD=env("SMS_PASSWORD")
WHATSAPP_USER_ID=env("WHATSAPP_USER_ID")
WHATSAPP_PASSWORD=env("WHATSAPP_PASSWORD")

BASE_URL=env("BASE_URL")

USE_EMAIL = env('USE_EMAIL')
EMAIL_USE_TLS = True
EMAIL_HOST = env('EMAIL_HOST')
EMAIL_PORT = int(env('EMAIL_PORT'))
EMAIL_HOST_USER = USE_EMAIL
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = 'Blinktrade <'+USE_EMAIL+'>'
DEFAULT_TO_EMAIL = USE_EMAIL
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
ADMIN_EMAIL = env('ADMIN_EMAIL')
EMAIL_HOST_USER = env('EMAIL_HOST_USER')


CRONJOBS = [
    ('0 0 * * *', 'core.cron.get_all_leads'),
    ('0 1 * * *', 'core.cron.get_daily_brokarage'),
    ('30 5 1 * * ', 'core.cron.generate_jv_file_report'),
    ('30 5 1 * *', 'core.cron.generate_mis_file_report'),
    ('30 10 * * *', 'core.cron.generate_daily_incentive_file_report')
]

CSRF_TRUSTED_ORIGINS=["https://drauat.clarksfield.com", "https://jm-las.brainbasket.in","http://localhost"]

# csp settings for django-csp
CSP_DEFAULT_SRC = ("'self'",)
CSP_CONNECT_SRC =  ("'self'")
# CSP_SCRIPT_SRC Allow scripts and inline scripts
CSP_SCRIPT_SRC = ("'self'","*","'unsafe-inline'", "'unsafe-eval'")
CSP_STYLE_SRC = ("'self'", "'unsafe-inline'", "'unsafe-eval'","*")
# CSP font allow fonts from everywhere
CSP_FONT_SRC = ("'self'","*")
# CSP img allow images from everywhere
CSP_IMG_SRC = ("'self'", "*", "data:", "blob:")
# CSP_PLUGIN_TYPES= ("'self'","*")

# HSTS settings

# SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# SECURE_HSTS_SECONDS = 31536000
# SECURE_REFERRER_POLICY = 'same-origin'
# SECURE_SSL_REDIRECT = True

# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')